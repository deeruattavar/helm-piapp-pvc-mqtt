apiVersion: v1
kind: Pod
metadata:
  name: pi-app-pod
  #namespace: pi-app-namespace
  labels:
     app: pi-app
     backend: dbinit-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pi-app
      backend: dbinit-service 
  template:
    metadata:
      labels:
        app: pi-app
        backend: dbinit-service    
     
spec:
 {{ if .Values.appSandbox.enabled }}  
  volumes:
  - name: database-volume  
    hostPath:
       path: "/home/deeraj/mqtt-auth/postgres1/data"
       type: DirectoryOrCreate
  - name: myvolume 
    hostPath:
       path: "/home/deeraj/mqtt-auth/db"
       type: DirectoryOrCreate
{{ end }}
    {{- if .Values.customResources.enablespecificdownload }}
    {{- with .Values.nodeSelector }}
       nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- end }}
    {{- with .Values.affinity }}
       affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
       tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}


  
   
  containers:

  # Main application container
  - name: database-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagepostgres.repository }}:{{ .Values.imagepostgres.tag }}" # alpine is a simple Linux OS image
    #hostNetwork: true 
    env:
    - name: "POSTGRES_DB"
      value: "postgres"
    - name: "POSTGRES_USER"
      value: "postgres"
    - name: "POSTGRES_PASSWORD"
      value: "Siemens123"  
  {{ if .Values.appSandbox.enabled }}      
    volumeMounts:
    - name: database-volume
      mountPath: /var/lib/postgresql/data/
   {{- end }}   
    ports:
    - containerPort: 5432
    
  
