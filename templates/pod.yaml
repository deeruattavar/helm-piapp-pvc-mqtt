apiVersion: v1
kind: Pod
metadata:
  name: pi-app-pod
  #namespace: pi-app-namespace
  labels:
     app: pi-app
     backend: dbinit-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pi-app
      backend: dbinit-service 
  template:
    metadata:
      labels:
        app: pi-app
        backend: dbinit-service    
     
spec:
{{ if .Values.appSandbox.enabled }}
  volumes:
  - name: database-volume 
    hostPath:
       path: "/home/deeraj/mqtt-auth/postgres/data"
       type: DirectoryOrCreate
  - name: myvolume 
    hostPath:
       path: "/home/deeraj/mqtt-auth/db"
       type: DirectoryOrCreate
{{ end }}
    {{- if .Values.customResources.enablespecificdownload }}
    {{- with .Values.nodeSelector }}
       nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- end }}
    {{- with .Values.affinity }}
       affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
       tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}


  
   
  containers:

  # Main application container
  - name: database-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagepostgres.repository }}:{{ .Values.imagepostgres.tag }}"
    hostNetwork: true 
    env:
    - name: "POSTGRES_DB"
      value: "postgres"
    - name: "POSTGRES_USER"
      value: "postgres"
    - name: "POSTGRES_PASSWORD"
      value: "Siemens123"
{{ if .Values.appSandbox.enabled }}       
    volumeMounts:
    - name: database-volume
      mountPath: /var/lib/postgresql/data
 {{- end }}        
    ports:
    - containerPort: 5432
    
  - name: tokenizer-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagetokenizerimage.repository }}:{{ .Values.imagetokenizerimage.tag }}"
    hostNetwork: true 
    ports:
    - containerPort: 4504
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}' 
        
    
  # Sidecar container
  - name: kpi-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagekpiimage.repository }}:{{ .Values.imagekpiimage.tag }}" 
    hostNetwork: true 
    ports:
    - containerPort: 4502
    env:
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"    
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value:  '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: asset-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imageassetimage.repository }}:{{ .Values.imageassetimage.tag }}"
    hostNetwork: true 
    ports:
    - containerPort: 4504
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value:  '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'
      
  - name: data-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagedataimage.repository }}:{{ .Values.imagedataimage.tag }}"
    hostNetwork: true 
    
    ports:
    - containerPort: 4505
    env:
   
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'
  
  
  - name: dashboard-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagedashboardimage.repository }}:{{ .Values.imagedashboardimage.tag }}"    
    hostNetwork: true 
    ports:
    - containerPort: 4506
    env:
   
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"    
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: usermanager-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imageusermanagerimage.repository }}:{{ .Values.imageusermanagerimage.tag }}" 
    hostNetwork: true 
    ports:
    - containerPort: 4507
    env:
   
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'
  
  - name: billing-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagebillingimage.repository }}:{{ .Values.imagebillingimage.tag }}"    
    hostNetwork: true 
    ports:
    - containerPort: 4508
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: time-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagetimeimage.repository }}:{{ .Values.imagetimeimage.tag }}"  
    hostNetwork: true 
    ports:
    - containerPort: 4509
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'
      
  - name: test-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagetestimage.repository }}:{{ .Values.imagetestimage.tag }}"  
    hostNetwork: true 
    ports:
    - containerPort: 45011
    env:
   
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: frontend-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagefrontendimage.repository }}:{{ .Values.imagefrontendimage.tag }}"  
    #hostNetwork: true 
    ports:
    - containerPort: 4201
      hostPort: 4201
    env:
   
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"    
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: dbinit-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagedbinitapiimage.repository }}:{{ .Values.imagedbinitapiimage.tag }}"  
    hostNetwork: true 
    ports:
    - containerPort: 1337
      hostPort: 1337
    env:
  
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"   
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: publisher-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagedemopublisher.repository }}:{{ .Values.imagedemopublisher.tag }}"  
    hostNetwork: true 
    ports:
    - containerPort: 3500
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"    
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'

  - name: subscriber-service
    imagePullPolicy: IfNotPresent
    image:  "{{ .Values.imagedemosubscriber.repository }}:{{ .Values.imagedemosubscriber.tag }}"  
    hostNetwork: true 
    ports:
    - containerPort: 3000
    env:
    
    - name: "no_proxy"
      value: "localhost;127.0.0.1"
    - name: "DBSERVICETYPE"
      value: "postgres"
    - name: "DBSERVICE"
      value: "WinCCCloudDatabaseEx"  
    - name: "DBSERVICE2TYPE"
      value: "postgres"
    - name: "DBSERVICE2"
      value: "EdgeDb"  
    - name: "EXTENDED_ERRORS"
      value: "true"
    - name: "LOG_DEBUG_INFO"
      value: "true"
    - name: {{ .Values.env.name }}
      value: '{"postgres":[{"name":"WinCCCloudDatabaseEx","credentials":{"name":"postgres","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}},{"name":"EdgeDb","credentials":{"name":"edgedb","host":"localhost","port":"5432","username":"postgres","password":"Siemens123"}}]}'
  
  - name: mqtt-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagemqtt.repository }}:{{ .Values.imagemqtt.tag }}" 
    hostNetwork: true 
    ports:
    - containerPort: 1883
      name: https
      protocol: TCP
    - containerPort: 1884
      name: iowa
      protocol: TCP
    {{ if .Values.appSandbox.enabled }}
    volumeMounts:
    - name: myvolume 
      mountPath: /home/mosquitto/data
      {{- end }}
      resources:
{{ toYaml .Values.resources | indent 12 }}
  
  
  
  - name: dbconfigui-service
    imagePullPolicy: IfNotPresent
    image: "{{ .Values.imagedbconfigui.repository }}:{{ .Values.imagedbconfigui.tag }}"
    hostNetwork: true 
    ports:
    - containerPort: 7777
   
